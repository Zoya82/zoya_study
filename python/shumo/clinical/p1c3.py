from pulp import *

immune_projects = [
    {"项目名称": "肿瘤标志物1(e4/e6)", "收费": 80.00, "试剂成本": 32.59},
    {"项目名称": "肿瘤标志物1(e8)", "收费": 83.57, "试剂成本": 32.59},
    {"项目名称": "肿瘤标志物1(2/4/E1/e6)", "收费": 95.00, "试剂成本": 34.55},
    {"项目名称": "贫血(e4/e6)", "收费": 41.67, "试剂成本": 18.85},
    {"项目名称": "贫血(e8)", "收费": 41.67, "试剂成本": 20.06},
    {"项目名称": "甲状腺功能1(e4/e6)", "收费": 37.83, "试剂成本": 12.94},
    {"项目名称": "甲状腺功能1(e8)", "收费": 37.29, "试剂成本": 13.56},
    {"项目名称": "甲状腺功能1(cobas e4)", "收费": 36.00, "试剂成本": 11.43},
    {"项目名称": "激素1(e8)", "收费": 45.00, "试剂成本": 15.97},
    {"项目名称": "激素1(e4/e6)", "收费": 45.00, "试剂成本": 15.71},
    {"项目名称": "骨标志物(e8)", "收费": 60.00, "试剂成本": 29.03},
    {"项目名称": "骨标志物(2/4/E1/e6)", "收费": 60.00, "试剂成本": 27.27},
    {"项目名称": "传染性疾病1(e8)", "收费": 41.25, "试剂成本": 16.13},
    {"项目名称": "传染性疾病1(e4/e6)", "收费": 41.25, "试剂成本": 15.21},
    {"项目名称": "传染性疾病2(雅)", "收费": 12.01, "试剂成本": 50.00},
    {"项目名称": "传染性疾病2", "收费": 16.46, "试剂成本": 41.67},
    {"项目名称": "激素2", "收费": 17.71, "试剂成本": 45.00},
    {"项目名称": "激素3", "收费": 19.68, "试剂成本": 50.00},
    {"项目名称": "传染性疾病3", "收费": 15.00, "试剂成本": 30.00},
    {"项目名称": "凝血功能", "收费": 26.67, "试剂成本": 11.27},
    {"项目名称": "肝功能", "收费": 30.00, "试剂成本": 15.15},
    {"项目名称": "血栓", "收费": 60.00, "试剂成本": 36.82},
    {"项目名称": "传染性疾病4(安)", "收费": 60.00, "试剂成本": 30.00},
    {"项目名称": "肿瘤标志物2", "收费": 95.00, "试剂成本": 23.50},
    {"项目名称": "传染性疾病5", "收费": 45.00, "试剂成本": 33.33},
    {"项目名称": "甲状腺功能2", "收费": 33.20, "试剂成本": 11.38},
    {"项目名称": "肿瘤标志物3", "收费": 75.00, "试剂成本": 18.40}
]

total_samples = sum([5708, 7326, 8686, 7348, 8851, 7873, 7484, 7597, 7140, 6094, 6790, 6012])  # 86919
total_revenue = sum([889290, 1355680, 1545000, 1336530, 1620690, 1408420, 1307230, 1323580, 1218260, 986550, 1024960, 878950])  # 16082140

model = LpProblem("合理分配项目检验量", LpMaximize)

x = {p["项目名称"]: LpVariable(f"x_{p['项目名称']}", lowBound=0, cat=LpInteger) for p in immune_projects}

daily_consumable_cost = sum([
    930, 280, 170, 200, 1300, 1409, 2800, 2800, 700, 4300,
    1000, 809, 1045, 1135, 2452
])
annual_consumable_cost = daily_consumable_cost * 365  # 每天都用

model += lpSum(x[p["项目名称"]] * (p["收费"] - p["试剂成本"]) for p in immune_projects) - annual_consumable_cost

model += lpSum(x[p["项目名称"]] for p in immune_projects) == total_samples

model += lpSum(x[p["项目名称"]] * p["收费"] for p in immune_projects) <= total_revenue * 1.02  # 允许小幅超过

model += lpSum([LpVariable(f"used_{p['项目名称']}", cat=LpBinary) for p in immune_projects]) >= 10

model.solve(PULP_CBC_CMD())

print("Status:", LpStatus[model.status])
print("\n每个项目的年检验数量：")
total_profit = 0
for p in immune_projects:
    qty = x[p["项目名称"]].varValue
    if qty > 0:
        revenue = qty * p["收费"]
        cost = qty * p["试剂成本"]
        profit = revenue - cost
        total_profit += profit
        print(f"{p['项目名称']}: {int(qty)} 次，收入: ¥{revenue:.2f}，成本: ¥{cost:.2f}，利润: ¥{profit:.2f}")

print(f"\n年度液体耗材成本: ¥{annual_consumable_cost:.2f}")
print(f"总利润: ¥{total_profit - annual_consumable_cost:.2f}")
